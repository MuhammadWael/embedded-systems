
Floating_name.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000480  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000480  000004f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000004fc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000052c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  00000568  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f40  00000000  00000000  00000638  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007f4  00000000  00000000  00001578  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007aa  00000000  00000000  00001d6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000214  00000000  00000000  00002518  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f4  00000000  00000000  0000272c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a32  00000000  00000000  00002c20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00003652  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e8       	ldi	r30, 0x80	; 128
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 07 02 	call	0x40e	; 0x40e <main>
  7a:	0c 94 3e 02 	jmp	0x47c	; 0x47c <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_void_Set_pin_dir>:
		switch(copy_u8_port)
		{
			case PORTA:TOGGLE_BIT(PORTA_REG,copy_u8_pin);break;
			case PORTB:TOGGLE_BIT(PORTB_REG,copy_u8_pin);break;
			case PORTC:TOGGLE_BIT(PORTC_REG,copy_u8_pin);break;
			case PORTD:TOGGLE_BIT(PORTD_REG,copy_u8_pin);break;
  82:	68 30       	cpi	r22, 0x08	; 8
  84:	08 f0       	brcs	.+2      	; 0x88 <DIO_void_Set_pin_dir+0x6>
  86:	6d c0       	rjmp	.+218    	; 0x162 <DIO_void_Set_pin_dir+0xe0>
  88:	41 30       	cpi	r20, 0x01	; 1
  8a:	a1 f5       	brne	.+104    	; 0xf4 <DIO_void_Set_pin_dir+0x72>
  8c:	81 30       	cpi	r24, 0x01	; 1
  8e:	89 f0       	breq	.+34     	; 0xb2 <DIO_void_Set_pin_dir+0x30>
  90:	28 f0       	brcs	.+10     	; 0x9c <DIO_void_Set_pin_dir+0x1a>
  92:	82 30       	cpi	r24, 0x02	; 2
  94:	c9 f0       	breq	.+50     	; 0xc8 <DIO_void_Set_pin_dir+0x46>
  96:	83 30       	cpi	r24, 0x03	; 3
  98:	11 f1       	breq	.+68     	; 0xde <DIO_void_Set_pin_dir+0x5c>
  9a:	08 95       	ret
  9c:	2a b3       	in	r18, 0x1a	; 26
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_void_Set_pin_dir+0x26>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_void_Set_pin_dir+0x22>
  ac:	82 2b       	or	r24, r18
  ae:	8a bb       	out	0x1a, r24	; 26
  b0:	08 95       	ret
  b2:	27 b3       	in	r18, 0x17	; 23
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_void_Set_pin_dir+0x3c>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_void_Set_pin_dir+0x38>
  c2:	82 2b       	or	r24, r18
  c4:	87 bb       	out	0x17, r24	; 23
  c6:	08 95       	ret
  c8:	24 b3       	in	r18, 0x14	; 20
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_void_Set_pin_dir+0x52>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_void_Set_pin_dir+0x4e>
  d8:	82 2b       	or	r24, r18
  da:	84 bb       	out	0x14, r24	; 20
  dc:	08 95       	ret
  de:	21 b3       	in	r18, 0x11	; 17
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_void_Set_pin_dir+0x68>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_void_Set_pin_dir+0x64>
  ee:	82 2b       	or	r24, r18
  f0:	81 bb       	out	0x11, r24	; 17
  f2:	08 95       	ret
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	91 f0       	breq	.+36     	; 0x11c <DIO_void_Set_pin_dir+0x9a>
  f8:	28 f0       	brcs	.+10     	; 0x104 <DIO_void_Set_pin_dir+0x82>
  fa:	82 30       	cpi	r24, 0x02	; 2
  fc:	d9 f0       	breq	.+54     	; 0x134 <DIO_void_Set_pin_dir+0xb2>
  fe:	83 30       	cpi	r24, 0x03	; 3
 100:	29 f1       	breq	.+74     	; 0x14c <DIO_void_Set_pin_dir+0xca>
 102:	08 95       	ret
 104:	2a b3       	in	r18, 0x1a	; 26
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_void_Set_pin_dir+0x8e>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_void_Set_pin_dir+0x8a>
 114:	80 95       	com	r24
 116:	82 23       	and	r24, r18
 118:	8a bb       	out	0x1a, r24	; 26
 11a:	08 95       	ret
 11c:	27 b3       	in	r18, 0x17	; 23
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_void_Set_pin_dir+0xa6>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_void_Set_pin_dir+0xa2>
 12c:	80 95       	com	r24
 12e:	82 23       	and	r24, r18
 130:	87 bb       	out	0x17, r24	; 23
 132:	08 95       	ret
 134:	24 b3       	in	r18, 0x14	; 20
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_void_Set_pin_dir+0xbe>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_void_Set_pin_dir+0xba>
 144:	80 95       	com	r24
 146:	82 23       	and	r24, r18
 148:	84 bb       	out	0x14, r24	; 20
 14a:	08 95       	ret
 14c:	21 b3       	in	r18, 0x11	; 17
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <DIO_void_Set_pin_dir+0xd6>
 154:	88 0f       	add	r24, r24
 156:	99 1f       	adc	r25, r25
 158:	6a 95       	dec	r22
 15a:	e2 f7       	brpl	.-8      	; 0x154 <DIO_void_Set_pin_dir+0xd2>
 15c:	80 95       	com	r24
 15e:	82 23       	and	r24, r18
 160:	81 bb       	out	0x11, r24	; 17
 162:	08 95       	ret

00000164 <DIO_void_Set_pin_val>:
 164:	68 30       	cpi	r22, 0x08	; 8
 166:	08 f0       	brcs	.+2      	; 0x16a <DIO_void_Set_pin_val+0x6>
 168:	6d c0       	rjmp	.+218    	; 0x244 <DIO_void_Set_pin_val+0xe0>
 16a:	41 30       	cpi	r20, 0x01	; 1
 16c:	a1 f5       	brne	.+104    	; 0x1d6 <DIO_void_Set_pin_val+0x72>
 16e:	81 30       	cpi	r24, 0x01	; 1
 170:	89 f0       	breq	.+34     	; 0x194 <DIO_void_Set_pin_val+0x30>
 172:	28 f0       	brcs	.+10     	; 0x17e <DIO_void_Set_pin_val+0x1a>
 174:	82 30       	cpi	r24, 0x02	; 2
 176:	c9 f0       	breq	.+50     	; 0x1aa <DIO_void_Set_pin_val+0x46>
 178:	83 30       	cpi	r24, 0x03	; 3
 17a:	11 f1       	breq	.+68     	; 0x1c0 <DIO_void_Set_pin_val+0x5c>
 17c:	08 95       	ret
 17e:	2b b3       	in	r18, 0x1b	; 27
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_void_Set_pin_val+0x26>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_void_Set_pin_val+0x22>
 18e:	82 2b       	or	r24, r18
 190:	8b bb       	out	0x1b, r24	; 27
 192:	08 95       	ret
 194:	28 b3       	in	r18, 0x18	; 24
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_void_Set_pin_val+0x3c>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_void_Set_pin_val+0x38>
 1a4:	82 2b       	or	r24, r18
 1a6:	88 bb       	out	0x18, r24	; 24
 1a8:	08 95       	ret
 1aa:	25 b3       	in	r18, 0x15	; 21
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_void_Set_pin_val+0x52>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_void_Set_pin_val+0x4e>
 1ba:	82 2b       	or	r24, r18
 1bc:	85 bb       	out	0x15, r24	; 21
 1be:	08 95       	ret
 1c0:	22 b3       	in	r18, 0x12	; 18
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <DIO_void_Set_pin_val+0x68>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <DIO_void_Set_pin_val+0x64>
 1d0:	82 2b       	or	r24, r18
 1d2:	82 bb       	out	0x12, r24	; 18
 1d4:	08 95       	ret
 1d6:	81 30       	cpi	r24, 0x01	; 1
 1d8:	91 f0       	breq	.+36     	; 0x1fe <DIO_void_Set_pin_val+0x9a>
 1da:	28 f0       	brcs	.+10     	; 0x1e6 <DIO_void_Set_pin_val+0x82>
 1dc:	82 30       	cpi	r24, 0x02	; 2
 1de:	d9 f0       	breq	.+54     	; 0x216 <DIO_void_Set_pin_val+0xb2>
 1e0:	83 30       	cpi	r24, 0x03	; 3
 1e2:	29 f1       	breq	.+74     	; 0x22e <DIO_void_Set_pin_val+0xca>
 1e4:	08 95       	ret
 1e6:	2b b3       	in	r18, 0x1b	; 27
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <DIO_void_Set_pin_val+0x8e>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	6a 95       	dec	r22
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <DIO_void_Set_pin_val+0x8a>
 1f6:	80 95       	com	r24
 1f8:	82 23       	and	r24, r18
 1fa:	8b bb       	out	0x1b, r24	; 27
 1fc:	08 95       	ret
 1fe:	28 b3       	in	r18, 0x18	; 24
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_void_Set_pin_val+0xa6>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	6a 95       	dec	r22
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_void_Set_pin_val+0xa2>
 20e:	80 95       	com	r24
 210:	82 23       	and	r24, r18
 212:	88 bb       	out	0x18, r24	; 24
 214:	08 95       	ret
 216:	25 b3       	in	r18, 0x15	; 21
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <DIO_void_Set_pin_val+0xbe>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <DIO_void_Set_pin_val+0xba>
 226:	80 95       	com	r24
 228:	82 23       	and	r24, r18
 22a:	85 bb       	out	0x15, r24	; 21
 22c:	08 95       	ret
 22e:	22 b3       	in	r18, 0x12	; 18
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_void_Set_pin_val+0xd6>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	6a 95       	dec	r22
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_void_Set_pin_val+0xd2>
 23e:	80 95       	com	r24
 240:	82 23       	and	r24, r18
 242:	82 bb       	out	0x12, r24	; 18
 244:	08 95       	ret

00000246 <set_port_dir>:
	}
}

void set_port_dir(u8 copy_u8_port,u8 copy_u8_dir)
{
	if (copy_u8_dir == OUTPUT)
 246:	61 30       	cpi	r22, 0x01	; 1
 248:	99 f4       	brne	.+38     	; 0x270 <set_port_dir+0x2a>
	{
		switch(copy_u8_port)
 24a:	81 30       	cpi	r24, 0x01	; 1
 24c:	49 f0       	breq	.+18     	; 0x260 <set_port_dir+0x1a>
 24e:	28 f0       	brcs	.+10     	; 0x25a <set_port_dir+0x14>
 250:	82 30       	cpi	r24, 0x02	; 2
 252:	49 f0       	breq	.+18     	; 0x266 <set_port_dir+0x20>
 254:	83 30       	cpi	r24, 0x03	; 3
 256:	51 f0       	breq	.+20     	; 0x26c <set_port_dir+0x26>
 258:	0b c0       	rjmp	.+22     	; 0x270 <set_port_dir+0x2a>
		{
			case PORTA: DDRA_REG = 0Xff;break;
 25a:	9f ef       	ldi	r25, 0xFF	; 255
 25c:	9a bb       	out	0x1a, r25	; 26
 25e:	08 c0       	rjmp	.+16     	; 0x270 <set_port_dir+0x2a>
			case PORTB: DDRB_REG = 0Xff;break;
 260:	9f ef       	ldi	r25, 0xFF	; 255
 262:	97 bb       	out	0x17, r25	; 23
 264:	05 c0       	rjmp	.+10     	; 0x270 <set_port_dir+0x2a>
			case PORTC: DDRC_REG = 0Xff;break;
 266:	9f ef       	ldi	r25, 0xFF	; 255
 268:	94 bb       	out	0x14, r25	; 20
 26a:	02 c0       	rjmp	.+4      	; 0x270 <set_port_dir+0x2a>
			case PORTD: DDRD_REG = 0Xff;break;
 26c:	9f ef       	ldi	r25, 0xFF	; 255
 26e:	91 bb       	out	0x11, r25	; 17
		}
	}
	if (copy_u8_dir == INPUT)
 270:	61 11       	cpse	r22, r1
 272:	0f c0       	rjmp	.+30     	; 0x292 <set_port_dir+0x4c>
	{
		switch(copy_u8_port)
 274:	81 30       	cpi	r24, 0x01	; 1
 276:	41 f0       	breq	.+16     	; 0x288 <set_port_dir+0x42>
 278:	28 f0       	brcs	.+10     	; 0x284 <set_port_dir+0x3e>
 27a:	82 30       	cpi	r24, 0x02	; 2
 27c:	39 f0       	breq	.+14     	; 0x28c <set_port_dir+0x46>
 27e:	83 30       	cpi	r24, 0x03	; 3
 280:	39 f0       	breq	.+14     	; 0x290 <set_port_dir+0x4a>
 282:	08 95       	ret
		{
			case PORTA: DDRA_REG = 0X00;break;
 284:	1a ba       	out	0x1a, r1	; 26
 286:	08 95       	ret
			case PORTB: DDRB_REG = 0X00;break;
 288:	17 ba       	out	0x17, r1	; 23
 28a:	08 95       	ret
			case PORTC: DDRC_REG = 0X00;break;
 28c:	14 ba       	out	0x14, r1	; 20
 28e:	08 95       	ret
			case PORTD: DDRD_REG = 0X00;break;
 290:	11 ba       	out	0x11, r1	; 17
 292:	08 95       	ret

00000294 <SH_Data>:
		LCD_send_data(string[itr]);
		LCD_Position_Row_Col(++i,1);
		LCD_send_data(string[itr++]);
		itr++;
	}
}
 294:	0f 93       	push	r16
 296:	1f 93       	push	r17
 298:	cf 93       	push	r28
 29a:	df 93       	push	r29
 29c:	00 d0       	rcall	.+0      	; 0x29e <SH_Data+0xa>
 29e:	00 d0       	rcall	.+0      	; 0x2a0 <SH_Data+0xc>
 2a0:	cd b7       	in	r28, 0x3d	; 61
 2a2:	de b7       	in	r29, 0x3e	; 62
 2a4:	08 2f       	mov	r16, r24
 2a6:	84 e0       	ldi	r24, 0x04	; 4
 2a8:	89 83       	std	Y+1, r24	; 0x01
 2aa:	85 e0       	ldi	r24, 0x05	; 5
 2ac:	8a 83       	std	Y+2, r24	; 0x02
 2ae:	86 e0       	ldi	r24, 0x06	; 6
 2b0:	8b 83       	std	Y+3, r24	; 0x03
 2b2:	87 e0       	ldi	r24, 0x07	; 7
 2b4:	8c 83       	std	Y+4, r24	; 0x04
 2b6:	10 e0       	ldi	r17, 0x00	; 0
 2b8:	14 c0       	rjmp	.+40     	; 0x2e2 <SH_Data+0x4e>
 2ba:	40 2f       	mov	r20, r16
 2bc:	50 e0       	ldi	r21, 0x00	; 0
 2be:	01 2e       	mov	r0, r17
 2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <SH_Data+0x32>
 2c2:	55 95       	asr	r21
 2c4:	47 95       	ror	r20
 2c6:	0a 94       	dec	r0
 2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <SH_Data+0x2e>
 2ca:	41 70       	andi	r20, 0x01	; 1
 2cc:	e1 e0       	ldi	r30, 0x01	; 1
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	ec 0f       	add	r30, r28
 2d2:	fd 1f       	adc	r31, r29
 2d4:	e1 0f       	add	r30, r17
 2d6:	f1 1d       	adc	r31, r1
 2d8:	60 81       	ld	r22, Z
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_void_Set_pin_val>
 2e0:	1f 5f       	subi	r17, 0xFF	; 255
 2e2:	14 30       	cpi	r17, 0x04	; 4
 2e4:	50 f3       	brcs	.-44     	; 0x2ba <SH_Data+0x26>
 2e6:	0f 90       	pop	r0
 2e8:	0f 90       	pop	r0
 2ea:	0f 90       	pop	r0
 2ec:	0f 90       	pop	r0
 2ee:	df 91       	pop	r29
 2f0:	cf 91       	pop	r28
 2f2:	1f 91       	pop	r17
 2f4:	0f 91       	pop	r16
 2f6:	08 95       	ret

000002f8 <LCD_Send_Enable_Pulse>:
 2f8:	41 e0       	ldi	r20, 0x01	; 1
 2fa:	63 e0       	ldi	r22, 0x03	; 3
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_void_Set_pin_val>
 302:	8f e3       	ldi	r24, 0x3F	; 63
 304:	9f e1       	ldi	r25, 0x1F	; 31
 306:	01 97       	sbiw	r24, 0x01	; 1
 308:	f1 f7       	brne	.-4      	; 0x306 <LCD_Send_Enable_Pulse+0xe>
 30a:	00 c0       	rjmp	.+0      	; 0x30c <LCD_Send_Enable_Pulse+0x14>
 30c:	00 00       	nop
 30e:	40 e0       	ldi	r20, 0x00	; 0
 310:	63 e0       	ldi	r22, 0x03	; 3
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_void_Set_pin_val>
 318:	08 95       	ret

0000031a <LCD_send_command>:
 31a:	cf 93       	push	r28
 31c:	c8 2f       	mov	r28, r24
 31e:	40 e0       	ldi	r20, 0x00	; 0
 320:	61 e0       	ldi	r22, 0x01	; 1
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_void_Set_pin_val>
 328:	40 e0       	ldi	r20, 0x00	; 0
 32a:	62 e0       	ldi	r22, 0x02	; 2
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_void_Set_pin_val>
 332:	8c 2f       	mov	r24, r28
 334:	82 95       	swap	r24
 336:	8f 70       	andi	r24, 0x0F	; 15
 338:	0e 94 4a 01 	call	0x294	; 0x294 <SH_Data>
 33c:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_Send_Enable_Pulse>
 340:	8c 2f       	mov	r24, r28
 342:	0e 94 4a 01 	call	0x294	; 0x294 <SH_Data>
 346:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_Send_Enable_Pulse>
 34a:	cf 91       	pop	r28
 34c:	08 95       	ret

0000034e <LCD_init>:
 34e:	2f ef       	ldi	r18, 0xFF	; 255
 350:	83 ef       	ldi	r24, 0xF3	; 243
 352:	91 e0       	ldi	r25, 0x01	; 1
 354:	21 50       	subi	r18, 0x01	; 1
 356:	80 40       	sbci	r24, 0x00	; 0
 358:	90 40       	sbci	r25, 0x00	; 0
 35a:	e1 f7       	brne	.-8      	; 0x354 <LCD_init+0x6>
 35c:	00 c0       	rjmp	.+0      	; 0x35e <LCD_init+0x10>
 35e:	00 00       	nop
 360:	82 e0       	ldi	r24, 0x02	; 2
 362:	0e 94 4a 01 	call	0x294	; 0x294 <SH_Data>
 366:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_Send_Enable_Pulse>
 36a:	82 e0       	ldi	r24, 0x02	; 2
 36c:	0e 94 4a 01 	call	0x294	; 0x294 <SH_Data>
 370:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_Send_Enable_Pulse>
 374:	8c e0       	ldi	r24, 0x0C	; 12
 376:	0e 94 4a 01 	call	0x294	; 0x294 <SH_Data>
 37a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_Send_Enable_Pulse>
 37e:	8c e0       	ldi	r24, 0x0C	; 12
 380:	0e 94 8d 01 	call	0x31a	; 0x31a <LCD_send_command>
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	0e 94 8d 01 	call	0x31a	; 0x31a <LCD_send_command>
 38a:	08 95       	ret

0000038c <LCD_send_data>:
 38c:	cf 93       	push	r28
 38e:	c8 2f       	mov	r28, r24
 390:	41 e0       	ldi	r20, 0x01	; 1
 392:	61 e0       	ldi	r22, 0x01	; 1
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_void_Set_pin_val>
 39a:	40 e0       	ldi	r20, 0x00	; 0
 39c:	62 e0       	ldi	r22, 0x02	; 2
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_void_Set_pin_val>
 3a4:	8c 2f       	mov	r24, r28
 3a6:	82 95       	swap	r24
 3a8:	8f 70       	andi	r24, 0x0F	; 15
 3aa:	0e 94 4a 01 	call	0x294	; 0x294 <SH_Data>
 3ae:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_Send_Enable_Pulse>
 3b2:	8c 2f       	mov	r24, r28
 3b4:	0e 94 4a 01 	call	0x294	; 0x294 <SH_Data>
 3b8:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_Send_Enable_Pulse>
 3bc:	cf 91       	pop	r28
 3be:	08 95       	ret

000003c0 <LCD_Position_Row_Col>:
 3c0:	88 23       	and	r24, r24
 3c2:	29 f0       	breq	.+10     	; 0x3ce <LCD_Position_Row_Col+0xe>
 3c4:	81 30       	cpi	r24, 0x01	; 1
 3c6:	11 f4       	brne	.+4      	; 0x3cc <LCD_Position_Row_Col+0xc>
 3c8:	60 5c       	subi	r22, 0xC0	; 192
 3ca:	01 c0       	rjmp	.+2      	; 0x3ce <LCD_Position_Row_Col+0xe>
 3cc:	60 e0       	ldi	r22, 0x00	; 0
 3ce:	86 2f       	mov	r24, r22
 3d0:	80 68       	ori	r24, 0x80	; 128
 3d2:	0e 94 8d 01 	call	0x31a	; 0x31a <LCD_send_command>
 3d6:	08 95       	ret

000003d8 <LCD_void_draw_new_data>:
void LCD_void_draw_new_data(u8 *data_array,u8 pattern)
{
 3d8:	0f 93       	push	r16
 3da:	1f 93       	push	r17
 3dc:	cf 93       	push	r28
 3de:	8c 01       	movw	r16, r24
	u8 CGRAM_address = pattern*8;
 3e0:	86 2f       	mov	r24, r22
 3e2:	88 0f       	add	r24, r24
 3e4:	88 0f       	add	r24, r24
 3e6:	88 0f       	add	r24, r24
	u8 i = 0;
	CLR_BIT(CGRAM_address,7);
 3e8:	8f 77       	andi	r24, 0x7F	; 127
	SET_BIT(CGRAM_address,6);
	LCD_send_command(CGRAM_address);
 3ea:	80 64       	ori	r24, 0x40	; 64
 3ec:	0e 94 8d 01 	call	0x31a	; 0x31a <LCD_send_command>
	for (i = 0;i < 8;i++)
 3f0:	c0 e0       	ldi	r28, 0x00	; 0
 3f2:	07 c0       	rjmp	.+14     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
	{
		LCD_send_data(data_array[i]);
 3f4:	f8 01       	movw	r30, r16
 3f6:	ec 0f       	add	r30, r28
 3f8:	f1 1d       	adc	r31, r1
 3fa:	80 81       	ld	r24, Z
 3fc:	0e 94 c6 01 	call	0x38c	; 0x38c <LCD_send_data>
	u8 CGRAM_address = pattern*8;
	u8 i = 0;
	CLR_BIT(CGRAM_address,7);
	SET_BIT(CGRAM_address,6);
	LCD_send_command(CGRAM_address);
	for (i = 0;i < 8;i++)
 400:	cf 5f       	subi	r28, 0xFF	; 255
 402:	c8 30       	cpi	r28, 0x08	; 8
 404:	b8 f3       	brcs	.-18     	; 0x3f4 <LCD_void_draw_new_data+0x1c>
	{
		LCD_send_data(data_array[i]);
	}
 406:	cf 91       	pop	r28
 408:	1f 91       	pop	r17
 40a:	0f 91       	pop	r16
 40c:	08 95       	ret

0000040e <main>:
 #include "LCD_Interface.h"
 #include "SWITCH_Interface.h"
 #define F_CPU 16000000UL
 #include <util/delay.h>
int main(void)
{
 40e:	cf 93       	push	r28
 410:	df 93       	push	r29
 412:	cd b7       	in	r28, 0x3d	; 61
 414:	de b7       	in	r29, 0x3e	; 62
 416:	28 97       	sbiw	r28, 0x08	; 8
 418:	0f b6       	in	r0, 0x3f	; 63
 41a:	f8 94       	cli
 41c:	de bf       	out	0x3e, r29	; 62
 41e:	0f be       	out	0x3f, r0	; 63
 420:	cd bf       	out	0x3d, r28	; 61
	set_port_dir(LCD_DATA_PORT,OUTPUT);
 422:	61 e0       	ldi	r22, 0x01	; 1
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	0e 94 23 01 	call	0x246	; 0x246 <set_port_dir>
	DIO_void_Set_pin_dir(LCD_RS_PORT,LCD_RS_PIN,OUTPUT);
 42a:	41 e0       	ldi	r20, 0x01	; 1
 42c:	61 e0       	ldi	r22, 0x01	; 1
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	0e 94 41 00 	call	0x82	; 0x82 <DIO_void_Set_pin_dir>
	DIO_void_Set_pin_dir(LCD_RW_PORT,LCD_RW_PIN,OUTPUT);
 434:	41 e0       	ldi	r20, 0x01	; 1
 436:	62 e0       	ldi	r22, 0x02	; 2
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_void_Set_pin_dir>
	DIO_void_Set_pin_dir(LCD_E_PORT,LCD_E_PIN,OUTPUT);
 43e:	41 e0       	ldi	r20, 0x01	; 1
 440:	63 e0       	ldi	r22, 0x03	; 3
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	0e 94 41 00 	call	0x82	; 0x82 <DIO_void_Set_pin_dir>
	DIO_void_Set_pin_dir(PORTD,PIN6,INPUT);
 448:	40 e0       	ldi	r20, 0x00	; 0
 44a:	66 e0       	ldi	r22, 0x06	; 6
 44c:	83 e0       	ldi	r24, 0x03	; 3
 44e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_void_Set_pin_dir>
	LCD_init();
 452:	0e 94 a7 01 	call	0x34e	; 0x34e <LCD_init>
	LCD_Position_Row_Col(1,4);
 456:	64 e0       	ldi	r22, 0x04	; 4
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LCD_Position_Row_Col>
	u8 data[8] = {0b00000,0b01010,0b10001,0b10010,0b10001,0b11111,0b00000,0b00000};
 45e:	88 e0       	ldi	r24, 0x08	; 8
 460:	e0 e6       	ldi	r30, 0x60	; 96
 462:	f0 e0       	ldi	r31, 0x00	; 0
 464:	de 01       	movw	r26, r28
 466:	11 96       	adiw	r26, 0x01	; 1
 468:	01 90       	ld	r0, Z+
 46a:	0d 92       	st	X+, r0
 46c:	8a 95       	dec	r24
 46e:	e1 f7       	brne	.-8      	; 0x468 <main+0x5a>
	LCD_void_draw_new_data(data,0);
 470:	60 e0       	ldi	r22, 0x00	; 0
 472:	ce 01       	movw	r24, r28
 474:	01 96       	adiw	r24, 0x01	; 1
 476:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCD_void_draw_new_data>
 47a:	ff cf       	rjmp	.-2      	; 0x47a <main+0x6c>

0000047c <_exit>:
 47c:	f8 94       	cli

0000047e <__stop_program>:
 47e:	ff cf       	rjmp	.-2      	; 0x47e <__stop_program>
