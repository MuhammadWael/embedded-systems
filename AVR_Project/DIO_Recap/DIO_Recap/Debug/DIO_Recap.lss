
DIO_Recap.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000370  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000003c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000003c4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003f4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000430  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008f8  00000000  00000000  00000480  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005da  00000000  00000000  00000d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000364  00000000  00000000  00001352  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  000016b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000036e  00000000  00000000  00001720  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002bf  00000000  00000000  00001a8e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001d4d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 44 01 	call	0x288	; 0x288 <main>
  64:	0c 94 b6 01 	jmp	0x36c	; 0x36c <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_void_set_pin_dir>:
#include "DIO_adress.h"
#include "DIO_interface.h"

void DIO_void_set_pin_dir(u8 copy_u8_port ,u8 copy_u8_pin ,u8 copy_u8_status)
{
	if (copy_u8_status == OUTPUT)
  6c:	41 30       	cpi	r20, 0x01	; 1
  6e:	a1 f5       	brne	.+104    	; 0xd8 <DIO_void_set_pin_dir+0x6c>
	{
		switch(copy_u8_port)
  70:	81 30       	cpi	r24, 0x01	; 1
  72:	89 f0       	breq	.+34     	; 0x96 <DIO_void_set_pin_dir+0x2a>
  74:	28 f0       	brcs	.+10     	; 0x80 <DIO_void_set_pin_dir+0x14>
  76:	82 30       	cpi	r24, 0x02	; 2
  78:	c9 f0       	breq	.+50     	; 0xac <DIO_void_set_pin_dir+0x40>
  7a:	83 30       	cpi	r24, 0x03	; 3
  7c:	11 f1       	breq	.+68     	; 0xc2 <DIO_void_set_pin_dir+0x56>
  7e:	08 95       	ret
		{
			case PORTA : SET_BIT(DDRA_REG,copy_u8_pin); break;
  80:	2a b3       	in	r18, 0x1a	; 26
  82:	81 e0       	ldi	r24, 0x01	; 1
  84:	90 e0       	ldi	r25, 0x00	; 0
  86:	02 c0       	rjmp	.+4      	; 0x8c <DIO_void_set_pin_dir+0x20>
  88:	88 0f       	add	r24, r24
  8a:	99 1f       	adc	r25, r25
  8c:	6a 95       	dec	r22
  8e:	e2 f7       	brpl	.-8      	; 0x88 <DIO_void_set_pin_dir+0x1c>
  90:	82 2b       	or	r24, r18
  92:	8a bb       	out	0x1a, r24	; 26
  94:	08 95       	ret
			case PORTB : SET_BIT(DDRB_REG,copy_u8_pin); break;
  96:	27 b3       	in	r18, 0x17	; 23
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <DIO_void_set_pin_dir+0x36>
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	6a 95       	dec	r22
  a4:	e2 f7       	brpl	.-8      	; 0x9e <DIO_void_set_pin_dir+0x32>
  a6:	82 2b       	or	r24, r18
  a8:	87 bb       	out	0x17, r24	; 23
  aa:	08 95       	ret
			case PORTC : SET_BIT(DDRC_REG,copy_u8_pin); break;
  ac:	24 b3       	in	r18, 0x14	; 20
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <DIO_void_set_pin_dir+0x4c>
  b4:	88 0f       	add	r24, r24
  b6:	99 1f       	adc	r25, r25
  b8:	6a 95       	dec	r22
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <DIO_void_set_pin_dir+0x48>
  bc:	82 2b       	or	r24, r18
  be:	84 bb       	out	0x14, r24	; 20
  c0:	08 95       	ret
			case PORTD : SET_BIT(DDRD_REG,copy_u8_pin); break;	
  c2:	21 b3       	in	r18, 0x11	; 17
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <DIO_void_set_pin_dir+0x62>
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	6a 95       	dec	r22
  d0:	e2 f7       	brpl	.-8      	; 0xca <DIO_void_set_pin_dir+0x5e>
  d2:	82 2b       	or	r24, r18
  d4:	81 bb       	out	0x11, r24	; 17
  d6:	08 95       	ret
		}
	}
	else if (copy_u8_status == INPUT)
  d8:	41 11       	cpse	r20, r1
  da:	37 c0       	rjmp	.+110    	; 0x14a <DIO_void_set_pin_dir+0xde>
	{
		switch(copy_u8_port)
  dc:	81 30       	cpi	r24, 0x01	; 1
  de:	91 f0       	breq	.+36     	; 0x104 <DIO_void_set_pin_dir+0x98>
  e0:	28 f0       	brcs	.+10     	; 0xec <DIO_void_set_pin_dir+0x80>
  e2:	82 30       	cpi	r24, 0x02	; 2
  e4:	d9 f0       	breq	.+54     	; 0x11c <DIO_void_set_pin_dir+0xb0>
  e6:	83 30       	cpi	r24, 0x03	; 3
  e8:	29 f1       	breq	.+74     	; 0x134 <DIO_void_set_pin_dir+0xc8>
  ea:	08 95       	ret
		{
			case PORTA : CLR_BIT(DDRA_REG,copy_u8_pin); break;
  ec:	2a b3       	in	r18, 0x1a	; 26
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	02 c0       	rjmp	.+4      	; 0xf8 <DIO_void_set_pin_dir+0x8c>
  f4:	88 0f       	add	r24, r24
  f6:	99 1f       	adc	r25, r25
  f8:	6a 95       	dec	r22
  fa:	e2 f7       	brpl	.-8      	; 0xf4 <DIO_void_set_pin_dir+0x88>
  fc:	80 95       	com	r24
  fe:	82 23       	and	r24, r18
 100:	8a bb       	out	0x1a, r24	; 26
 102:	08 95       	ret
			case PORTB : CLR_BIT(DDRB_REG,copy_u8_pin); break;
 104:	27 b3       	in	r18, 0x17	; 23
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_void_set_pin_dir+0xa4>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_void_set_pin_dir+0xa0>
 114:	80 95       	com	r24
 116:	82 23       	and	r24, r18
 118:	87 bb       	out	0x17, r24	; 23
 11a:	08 95       	ret
			case PORTC : CLR_BIT(DDRC_REG,copy_u8_pin); break;
 11c:	24 b3       	in	r18, 0x14	; 20
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_void_set_pin_dir+0xbc>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_void_set_pin_dir+0xb8>
 12c:	80 95       	com	r24
 12e:	82 23       	and	r24, r18
 130:	84 bb       	out	0x14, r24	; 20
 132:	08 95       	ret
			case PORTD : CLR_BIT(DDRD_REG,copy_u8_pin); break;
 134:	21 b3       	in	r18, 0x11	; 17
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_void_set_pin_dir+0xd4>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_void_set_pin_dir+0xd0>
 144:	80 95       	com	r24
 146:	82 23       	and	r24, r18
 148:	81 bb       	out	0x11, r24	; 17
 14a:	08 95       	ret

0000014c <DIO_void_set_pin_val>:
	}
}

void DIO_void_set_pin_val(u8 copy_u8_port ,u8 copy_u8_pin ,u8 copy_u8_value)
{
	if (copy_u8_value == HIGH)
 14c:	41 30       	cpi	r20, 0x01	; 1
 14e:	a1 f5       	brne	.+104    	; 0x1b8 <DIO_void_set_pin_val+0x6c>
	{
		switch(copy_u8_port)
 150:	81 30       	cpi	r24, 0x01	; 1
 152:	89 f0       	breq	.+34     	; 0x176 <DIO_void_set_pin_val+0x2a>
 154:	28 f0       	brcs	.+10     	; 0x160 <DIO_void_set_pin_val+0x14>
 156:	82 30       	cpi	r24, 0x02	; 2
 158:	c9 f0       	breq	.+50     	; 0x18c <DIO_void_set_pin_val+0x40>
 15a:	83 30       	cpi	r24, 0x03	; 3
 15c:	11 f1       	breq	.+68     	; 0x1a2 <DIO_void_set_pin_val+0x56>
 15e:	08 95       	ret
		{
			case PORTA : SET_BIT(PORTA_REG,copy_u8_pin); break;
 160:	2b b3       	in	r18, 0x1b	; 27
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_void_set_pin_val+0x20>
 168:	88 0f       	add	r24, r24
 16a:	99 1f       	adc	r25, r25
 16c:	6a 95       	dec	r22
 16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_void_set_pin_val+0x1c>
 170:	82 2b       	or	r24, r18
 172:	8b bb       	out	0x1b, r24	; 27
 174:	08 95       	ret
			case PORTB : SET_BIT(PORTB_REG,copy_u8_pin); break;
 176:	28 b3       	in	r18, 0x18	; 24
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	02 c0       	rjmp	.+4      	; 0x182 <DIO_void_set_pin_val+0x36>
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	6a 95       	dec	r22
 184:	e2 f7       	brpl	.-8      	; 0x17e <DIO_void_set_pin_val+0x32>
 186:	82 2b       	or	r24, r18
 188:	88 bb       	out	0x18, r24	; 24
 18a:	08 95       	ret
			case PORTC : SET_BIT(PORTC_REG,copy_u8_pin); break;
 18c:	25 b3       	in	r18, 0x15	; 21
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	02 c0       	rjmp	.+4      	; 0x198 <DIO_void_set_pin_val+0x4c>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	6a 95       	dec	r22
 19a:	e2 f7       	brpl	.-8      	; 0x194 <DIO_void_set_pin_val+0x48>
 19c:	82 2b       	or	r24, r18
 19e:	85 bb       	out	0x15, r24	; 21
 1a0:	08 95       	ret
			case PORTD : SET_BIT(PORTD_REG,copy_u8_pin); break;
 1a2:	22 b3       	in	r18, 0x12	; 18
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_void_set_pin_val+0x62>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_void_set_pin_val+0x5e>
 1b2:	82 2b       	or	r24, r18
 1b4:	82 bb       	out	0x12, r24	; 18
 1b6:	08 95       	ret
		}	
	}
	else if (copy_u8_value == LOW)
 1b8:	41 11       	cpse	r20, r1
 1ba:	37 c0       	rjmp	.+110    	; 0x22a <DIO_void_set_pin_val+0xde>
	{
		switch(copy_u8_port)
 1bc:	81 30       	cpi	r24, 0x01	; 1
 1be:	91 f0       	breq	.+36     	; 0x1e4 <DIO_void_set_pin_val+0x98>
 1c0:	28 f0       	brcs	.+10     	; 0x1cc <DIO_void_set_pin_val+0x80>
 1c2:	82 30       	cpi	r24, 0x02	; 2
 1c4:	d9 f0       	breq	.+54     	; 0x1fc <DIO_void_set_pin_val+0xb0>
 1c6:	83 30       	cpi	r24, 0x03	; 3
 1c8:	29 f1       	breq	.+74     	; 0x214 <DIO_void_set_pin_val+0xc8>
 1ca:	08 95       	ret
		{
			case PORTA : CLR_BIT(PORTA_REG,copy_u8_pin); break;
 1cc:	2b b3       	in	r18, 0x1b	; 27
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <DIO_void_set_pin_val+0x8c>
 1d4:	88 0f       	add	r24, r24
 1d6:	99 1f       	adc	r25, r25
 1d8:	6a 95       	dec	r22
 1da:	e2 f7       	brpl	.-8      	; 0x1d4 <DIO_void_set_pin_val+0x88>
 1dc:	80 95       	com	r24
 1de:	82 23       	and	r24, r18
 1e0:	8b bb       	out	0x1b, r24	; 27
 1e2:	08 95       	ret
			case PORTB : CLR_BIT(PORTB_REG,copy_u8_pin); break;
 1e4:	28 b3       	in	r18, 0x18	; 24
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <DIO_void_set_pin_val+0xa4>
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	6a 95       	dec	r22
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <DIO_void_set_pin_val+0xa0>
 1f4:	80 95       	com	r24
 1f6:	82 23       	and	r24, r18
 1f8:	88 bb       	out	0x18, r24	; 24
 1fa:	08 95       	ret
			case PORTC : CLR_BIT(PORTC_REG,copy_u8_pin); break;
 1fc:	25 b3       	in	r18, 0x15	; 21
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_void_set_pin_val+0xbc>
 204:	88 0f       	add	r24, r24
 206:	99 1f       	adc	r25, r25
 208:	6a 95       	dec	r22
 20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_void_set_pin_val+0xb8>
 20c:	80 95       	com	r24
 20e:	82 23       	and	r24, r18
 210:	85 bb       	out	0x15, r24	; 21
 212:	08 95       	ret
			case PORTD : CLR_BIT(PORTD_REG,copy_u8_pin); break;
 214:	22 b3       	in	r18, 0x12	; 18
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_void_set_pin_val+0xd4>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	6a 95       	dec	r22
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_void_set_pin_val+0xd0>
 224:	80 95       	com	r24
 226:	82 23       	and	r24, r18
 228:	82 bb       	out	0x12, r24	; 18
 22a:	08 95       	ret

0000022c <DIO_u8_get_pin_val>:
}

u8 DIO_u8_get_pin_val(u8 copy_u8_port ,u8 copy_u8_pin)
{
	u8 LOC_pin_value = 0;
	switch(copy_u8_port)
 22c:	81 30       	cpi	r24, 0x01	; 1
 22e:	79 f0       	breq	.+30     	; 0x24e <DIO_u8_get_pin_val+0x22>
 230:	28 f0       	brcs	.+10     	; 0x23c <DIO_u8_get_pin_val+0x10>
 232:	82 30       	cpi	r24, 0x02	; 2
 234:	a9 f0       	breq	.+42     	; 0x260 <DIO_u8_get_pin_val+0x34>
 236:	83 30       	cpi	r24, 0x03	; 3
 238:	e1 f0       	breq	.+56     	; 0x272 <DIO_u8_get_pin_val+0x46>
 23a:	24 c0       	rjmp	.+72     	; 0x284 <DIO_u8_get_pin_val+0x58>
	{
		case PORTA : LOC_pin_value = GET_BIT(PINA_REG,copy_u8_pin); break;
 23c:	89 b3       	in	r24, 0x19	; 25
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	02 c0       	rjmp	.+4      	; 0x246 <DIO_u8_get_pin_val+0x1a>
 242:	95 95       	asr	r25
 244:	87 95       	ror	r24
 246:	6a 95       	dec	r22
 248:	e2 f7       	brpl	.-8      	; 0x242 <DIO_u8_get_pin_val+0x16>
 24a:	81 70       	andi	r24, 0x01	; 1
 24c:	08 95       	ret
		case PORTB : LOC_pin_value = GET_BIT(PINB_REG,copy_u8_pin); break;
 24e:	86 b3       	in	r24, 0x16	; 22
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	02 c0       	rjmp	.+4      	; 0x258 <DIO_u8_get_pin_val+0x2c>
 254:	95 95       	asr	r25
 256:	87 95       	ror	r24
 258:	6a 95       	dec	r22
 25a:	e2 f7       	brpl	.-8      	; 0x254 <DIO_u8_get_pin_val+0x28>
 25c:	81 70       	andi	r24, 0x01	; 1
 25e:	08 95       	ret
		case PORTC : LOC_pin_value = GET_BIT(PINC_REG,copy_u8_pin); break;
 260:	83 b3       	in	r24, 0x13	; 19
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	02 c0       	rjmp	.+4      	; 0x26a <DIO_u8_get_pin_val+0x3e>
 266:	95 95       	asr	r25
 268:	87 95       	ror	r24
 26a:	6a 95       	dec	r22
 26c:	e2 f7       	brpl	.-8      	; 0x266 <DIO_u8_get_pin_val+0x3a>
 26e:	81 70       	andi	r24, 0x01	; 1
 270:	08 95       	ret
		case PORTD : LOC_pin_value = GET_BIT(PIND_REG,copy_u8_pin); break;
 272:	80 b3       	in	r24, 0x10	; 16
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	02 c0       	rjmp	.+4      	; 0x27c <DIO_u8_get_pin_val+0x50>
 278:	95 95       	asr	r25
 27a:	87 95       	ror	r24
 27c:	6a 95       	dec	r22
 27e:	e2 f7       	brpl	.-8      	; 0x278 <DIO_u8_get_pin_val+0x4c>
 280:	81 70       	andi	r24, 0x01	; 1
 282:	08 95       	ret
	}
}

u8 DIO_u8_get_pin_val(u8 copy_u8_port ,u8 copy_u8_pin)
{
	u8 LOC_pin_value = 0;
 284:	80 e0       	ldi	r24, 0x00	; 0
		case PORTB : LOC_pin_value = GET_BIT(PINB_REG,copy_u8_pin); break;
		case PORTC : LOC_pin_value = GET_BIT(PINC_REG,copy_u8_pin); break;
		case PORTD : LOC_pin_value = GET_BIT(PIND_REG,copy_u8_pin); break;
	}
	return LOC_pin_value;
}
 286:	08 95       	ret

00000288 <main>:
#include "DIO_interface.h"
#define F_CPU 16000000UL
#include <util/delay.h>
int main(void)
{
	DIO_void_set_pin_dir(PORTA,PIN0,OUTPUT);
 288:	41 e0       	ldi	r20, 0x01	; 1
 28a:	60 e0       	ldi	r22, 0x00	; 0
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_void_set_pin_dir>
	DIO_void_set_pin_dir(PORTA,PIN2,OUTPUT);
 292:	41 e0       	ldi	r20, 0x01	; 1
 294:	62 e0       	ldi	r22, 0x02	; 2
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_void_set_pin_dir>
	DIO_void_set_pin_dir(PORTA,PIN3,OUTPUT);
 29c:	41 e0       	ldi	r20, 0x01	; 1
 29e:	63 e0       	ldi	r22, 0x03	; 3
 2a0:	80 e0       	ldi	r24, 0x00	; 0
 2a2:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_void_set_pin_dir>
	DIO_void_set_pin_dir(PORTA,PIN1,INPUT);
 2a6:	40 e0       	ldi	r20, 0x00	; 0
 2a8:	61 e0       	ldi	r22, 0x01	; 1
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_void_set_pin_dir>
	u8 count = 0;
 2b0:	c0 e0       	ldi	r28, 0x00	; 0
    while (1) 
    {
		if ((DIO_u8_get_pin_val(PORTA,PIN1)==HIGH) && count==0)
 2b2:	61 e0       	ldi	r22, 0x01	; 1
 2b4:	80 e0       	ldi	r24, 0x00	; 0
 2b6:	0e 94 16 01 	call	0x22c	; 0x22c <DIO_u8_get_pin_val>
 2ba:	81 30       	cpi	r24, 0x01	; 1
 2bc:	71 f4       	brne	.+28     	; 0x2da <main+0x52>
 2be:	c1 11       	cpse	r28, r1
 2c0:	0c c0       	rjmp	.+24     	; 0x2da <main+0x52>
		{
			DIO_void_set_pin_val(PORTA,PIN0,HIGH);
 2c2:	41 e0       	ldi	r20, 0x01	; 1
 2c4:	60 e0       	ldi	r22, 0x00	; 0
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_void_set_pin_val>
			while(DIO_u8_get_pin_val(PORTA,PIN1)==HIGH);
 2cc:	61 e0       	ldi	r22, 0x01	; 1
 2ce:	80 e0       	ldi	r24, 0x00	; 0
 2d0:	0e 94 16 01 	call	0x22c	; 0x22c <DIO_u8_get_pin_val>
 2d4:	81 30       	cpi	r24, 0x01	; 1
 2d6:	d1 f3       	breq	.-12     	; 0x2cc <main+0x44>
			count++;
 2d8:	cf 5f       	subi	r28, 0xFF	; 255
		}
		if ((DIO_u8_get_pin_val(PORTA,PIN1)==HIGH) && count==1)
 2da:	61 e0       	ldi	r22, 0x01	; 1
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	0e 94 16 01 	call	0x22c	; 0x22c <DIO_u8_get_pin_val>
 2e2:	81 30       	cpi	r24, 0x01	; 1
 2e4:	71 f4       	brne	.+28     	; 0x302 <main+0x7a>
 2e6:	c1 30       	cpi	r28, 0x01	; 1
 2e8:	61 f4       	brne	.+24     	; 0x302 <main+0x7a>
		{
			DIO_void_set_pin_val(PORTA,PIN2,HIGH);
 2ea:	41 e0       	ldi	r20, 0x01	; 1
 2ec:	62 e0       	ldi	r22, 0x02	; 2
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_void_set_pin_val>
			while(DIO_u8_get_pin_val(PORTA,PIN1)==HIGH);
 2f4:	61 e0       	ldi	r22, 0x01	; 1
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	0e 94 16 01 	call	0x22c	; 0x22c <DIO_u8_get_pin_val>
 2fc:	81 30       	cpi	r24, 0x01	; 1
 2fe:	d1 f3       	breq	.-12     	; 0x2f4 <main+0x6c>
			count++;
 300:	cf 5f       	subi	r28, 0xFF	; 255
		}
		if ((DIO_u8_get_pin_val(PORTA,PIN1)==HIGH) && count==2)
 302:	61 e0       	ldi	r22, 0x01	; 1
 304:	80 e0       	ldi	r24, 0x00	; 0
 306:	0e 94 16 01 	call	0x22c	; 0x22c <DIO_u8_get_pin_val>
 30a:	81 30       	cpi	r24, 0x01	; 1
 30c:	71 f4       	brne	.+28     	; 0x32a <main+0xa2>
 30e:	c2 30       	cpi	r28, 0x02	; 2
 310:	61 f4       	brne	.+24     	; 0x32a <main+0xa2>
		{
			DIO_void_set_pin_val(PORTA,PIN3,HIGH);
 312:	41 e0       	ldi	r20, 0x01	; 1
 314:	63 e0       	ldi	r22, 0x03	; 3
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_void_set_pin_val>
			while(DIO_u8_get_pin_val(PORTA,PIN1)==HIGH);
 31c:	61 e0       	ldi	r22, 0x01	; 1
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	0e 94 16 01 	call	0x22c	; 0x22c <DIO_u8_get_pin_val>
 324:	81 30       	cpi	r24, 0x01	; 1
 326:	d1 f3       	breq	.-12     	; 0x31c <main+0x94>
			count++;
 328:	cf 5f       	subi	r28, 0xFF	; 255
		}
		
		if ((DIO_u8_get_pin_val(PORTA,PIN1)==HIGH) &&(count == 3))
 32a:	61 e0       	ldi	r22, 0x01	; 1
 32c:	80 e0       	ldi	r24, 0x00	; 0
 32e:	0e 94 16 01 	call	0x22c	; 0x22c <DIO_u8_get_pin_val>
 332:	81 30       	cpi	r24, 0x01	; 1
 334:	09 f0       	breq	.+2      	; 0x338 <main+0xb0>
 336:	bd cf       	rjmp	.-134    	; 0x2b2 <main+0x2a>
 338:	c3 30       	cpi	r28, 0x03	; 3
 33a:	09 f0       	breq	.+2      	; 0x33e <main+0xb6>
 33c:	ba cf       	rjmp	.-140    	; 0x2b2 <main+0x2a>
		{
			DIO_void_set_pin_val(PORTA,PIN0,LOW);
 33e:	40 e0       	ldi	r20, 0x00	; 0
 340:	60 e0       	ldi	r22, 0x00	; 0
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_void_set_pin_val>
			DIO_void_set_pin_val(PORTA,PIN2,LOW);
 348:	40 e0       	ldi	r20, 0x00	; 0
 34a:	62 e0       	ldi	r22, 0x02	; 2
 34c:	80 e0       	ldi	r24, 0x00	; 0
 34e:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_void_set_pin_val>
			DIO_void_set_pin_val(PORTA,PIN3,LOW);
 352:	40 e0       	ldi	r20, 0x00	; 0
 354:	63 e0       	ldi	r22, 0x03	; 3
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_void_set_pin_val>
			while(DIO_u8_get_pin_val(PORTA,PIN1)==HIGH);
 35c:	61 e0       	ldi	r22, 0x01	; 1
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	0e 94 16 01 	call	0x22c	; 0x22c <DIO_u8_get_pin_val>
 364:	81 30       	cpi	r24, 0x01	; 1
 366:	d1 f3       	breq	.-12     	; 0x35c <main+0xd4>
			count = 0;
 368:	c0 e0       	ldi	r28, 0x00	; 0
 36a:	a3 cf       	rjmp	.-186    	; 0x2b2 <main+0x2a>

0000036c <_exit>:
 36c:	f8 94       	cli

0000036e <__stop_program>:
 36e:	ff cf       	rjmp	.-2      	; 0x36e <__stop_program>
