
Counter_by_LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000618  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000066c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000066c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000069c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  000006d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f98  00000000  00000000  000007b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000860  00000000  00000000  00001748  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007fe  00000000  00000000  00001fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c8  00000000  00000000  000027a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f2  00000000  00000000  00002970  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000855  00000000  00000000  00002e62  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  000036b7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 81 02 	call	0x502	; 0x502 <main>
  64:	0c 94 0a 03 	jmp	0x614	; 0x614 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_void_Set_pin_dir>:
  6c:	68 30       	cpi	r22, 0x08	; 8
  6e:	08 f0       	brcs	.+2      	; 0x72 <DIO_void_Set_pin_dir+0x6>
  70:	6d c0       	rjmp	.+218    	; 0x14c <DIO_void_Set_pin_dir+0xe0>
  72:	41 30       	cpi	r20, 0x01	; 1
  74:	a1 f5       	brne	.+104    	; 0xde <DIO_void_Set_pin_dir+0x72>
  76:	81 30       	cpi	r24, 0x01	; 1
  78:	89 f0       	breq	.+34     	; 0x9c <DIO_void_Set_pin_dir+0x30>
  7a:	28 f0       	brcs	.+10     	; 0x86 <DIO_void_Set_pin_dir+0x1a>
  7c:	82 30       	cpi	r24, 0x02	; 2
  7e:	c9 f0       	breq	.+50     	; 0xb2 <DIO_void_Set_pin_dir+0x46>
  80:	83 30       	cpi	r24, 0x03	; 3
  82:	11 f1       	breq	.+68     	; 0xc8 <DIO_void_Set_pin_dir+0x5c>
  84:	08 95       	ret
  86:	2a b3       	in	r18, 0x1a	; 26
  88:	81 e0       	ldi	r24, 0x01	; 1
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	02 c0       	rjmp	.+4      	; 0x92 <DIO_void_Set_pin_dir+0x26>
  8e:	88 0f       	add	r24, r24
  90:	99 1f       	adc	r25, r25
  92:	6a 95       	dec	r22
  94:	e2 f7       	brpl	.-8      	; 0x8e <DIO_void_Set_pin_dir+0x22>
  96:	82 2b       	or	r24, r18
  98:	8a bb       	out	0x1a, r24	; 26
  9a:	08 95       	ret
  9c:	27 b3       	in	r18, 0x17	; 23
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_void_Set_pin_dir+0x3c>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_void_Set_pin_dir+0x38>
  ac:	82 2b       	or	r24, r18
  ae:	87 bb       	out	0x17, r24	; 23
  b0:	08 95       	ret
  b2:	24 b3       	in	r18, 0x14	; 20
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_void_Set_pin_dir+0x52>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_void_Set_pin_dir+0x4e>
  c2:	82 2b       	or	r24, r18
  c4:	84 bb       	out	0x14, r24	; 20
  c6:	08 95       	ret
  c8:	21 b3       	in	r18, 0x11	; 17
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_void_Set_pin_dir+0x68>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_void_Set_pin_dir+0x64>
  d8:	82 2b       	or	r24, r18
  da:	81 bb       	out	0x11, r24	; 17
  dc:	08 95       	ret
  de:	81 30       	cpi	r24, 0x01	; 1
  e0:	91 f0       	breq	.+36     	; 0x106 <DIO_void_Set_pin_dir+0x9a>
  e2:	28 f0       	brcs	.+10     	; 0xee <DIO_void_Set_pin_dir+0x82>
  e4:	82 30       	cpi	r24, 0x02	; 2
  e6:	d9 f0       	breq	.+54     	; 0x11e <DIO_void_Set_pin_dir+0xb2>
  e8:	83 30       	cpi	r24, 0x03	; 3
  ea:	29 f1       	breq	.+74     	; 0x136 <DIO_void_Set_pin_dir+0xca>
  ec:	08 95       	ret
  ee:	2a b3       	in	r18, 0x1a	; 26
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_void_Set_pin_dir+0x8e>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_void_Set_pin_dir+0x8a>
  fe:	80 95       	com	r24
 100:	82 23       	and	r24, r18
 102:	8a bb       	out	0x1a, r24	; 26
 104:	08 95       	ret
 106:	27 b3       	in	r18, 0x17	; 23
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	02 c0       	rjmp	.+4      	; 0x112 <DIO_void_Set_pin_dir+0xa6>
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	6a 95       	dec	r22
 114:	e2 f7       	brpl	.-8      	; 0x10e <DIO_void_Set_pin_dir+0xa2>
 116:	80 95       	com	r24
 118:	82 23       	and	r24, r18
 11a:	87 bb       	out	0x17, r24	; 23
 11c:	08 95       	ret
 11e:	24 b3       	in	r18, 0x14	; 20
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	02 c0       	rjmp	.+4      	; 0x12a <DIO_void_Set_pin_dir+0xbe>
 126:	88 0f       	add	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	6a 95       	dec	r22
 12c:	e2 f7       	brpl	.-8      	; 0x126 <DIO_void_Set_pin_dir+0xba>
 12e:	80 95       	com	r24
 130:	82 23       	and	r24, r18
 132:	84 bb       	out	0x14, r24	; 20
 134:	08 95       	ret
 136:	21 b3       	in	r18, 0x11	; 17
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	02 c0       	rjmp	.+4      	; 0x142 <DIO_void_Set_pin_dir+0xd6>
 13e:	88 0f       	add	r24, r24
 140:	99 1f       	adc	r25, r25
 142:	6a 95       	dec	r22
 144:	e2 f7       	brpl	.-8      	; 0x13e <DIO_void_Set_pin_dir+0xd2>
 146:	80 95       	com	r24
 148:	82 23       	and	r24, r18
 14a:	81 bb       	out	0x11, r24	; 17
 14c:	08 95       	ret

0000014e <DIO_void_Set_pin_val>:
 14e:	68 30       	cpi	r22, 0x08	; 8
 150:	08 f0       	brcs	.+2      	; 0x154 <DIO_void_Set_pin_val+0x6>
 152:	6d c0       	rjmp	.+218    	; 0x22e <DIO_void_Set_pin_val+0xe0>
 154:	41 30       	cpi	r20, 0x01	; 1
 156:	a1 f5       	brne	.+104    	; 0x1c0 <DIO_void_Set_pin_val+0x72>
 158:	81 30       	cpi	r24, 0x01	; 1
 15a:	89 f0       	breq	.+34     	; 0x17e <DIO_void_Set_pin_val+0x30>
 15c:	28 f0       	brcs	.+10     	; 0x168 <DIO_void_Set_pin_val+0x1a>
 15e:	82 30       	cpi	r24, 0x02	; 2
 160:	c9 f0       	breq	.+50     	; 0x194 <DIO_void_Set_pin_val+0x46>
 162:	83 30       	cpi	r24, 0x03	; 3
 164:	11 f1       	breq	.+68     	; 0x1aa <DIO_void_Set_pin_val+0x5c>
 166:	08 95       	ret
 168:	2b b3       	in	r18, 0x1b	; 27
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_void_Set_pin_val+0x26>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	6a 95       	dec	r22
 176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_void_Set_pin_val+0x22>
 178:	82 2b       	or	r24, r18
 17a:	8b bb       	out	0x1b, r24	; 27
 17c:	08 95       	ret
 17e:	28 b3       	in	r18, 0x18	; 24
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_void_Set_pin_val+0x3c>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_void_Set_pin_val+0x38>
 18e:	82 2b       	or	r24, r18
 190:	88 bb       	out	0x18, r24	; 24
 192:	08 95       	ret
 194:	25 b3       	in	r18, 0x15	; 21
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_void_Set_pin_val+0x52>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_void_Set_pin_val+0x4e>
 1a4:	82 2b       	or	r24, r18
 1a6:	85 bb       	out	0x15, r24	; 21
 1a8:	08 95       	ret
 1aa:	22 b3       	in	r18, 0x12	; 18
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_void_Set_pin_val+0x68>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_void_Set_pin_val+0x64>
 1ba:	82 2b       	or	r24, r18
 1bc:	82 bb       	out	0x12, r24	; 18
 1be:	08 95       	ret
 1c0:	81 30       	cpi	r24, 0x01	; 1
 1c2:	91 f0       	breq	.+36     	; 0x1e8 <DIO_void_Set_pin_val+0x9a>
 1c4:	28 f0       	brcs	.+10     	; 0x1d0 <DIO_void_Set_pin_val+0x82>
 1c6:	82 30       	cpi	r24, 0x02	; 2
 1c8:	d9 f0       	breq	.+54     	; 0x200 <DIO_void_Set_pin_val+0xb2>
 1ca:	83 30       	cpi	r24, 0x03	; 3
 1cc:	29 f1       	breq	.+74     	; 0x218 <DIO_void_Set_pin_val+0xca>
 1ce:	08 95       	ret
 1d0:	2b b3       	in	r18, 0x1b	; 27
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <DIO_void_Set_pin_val+0x8e>
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	6a 95       	dec	r22
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <DIO_void_Set_pin_val+0x8a>
 1e0:	80 95       	com	r24
 1e2:	82 23       	and	r24, r18
 1e4:	8b bb       	out	0x1b, r24	; 27
 1e6:	08 95       	ret
 1e8:	28 b3       	in	r18, 0x18	; 24
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <DIO_void_Set_pin_val+0xa6>
 1f0:	88 0f       	add	r24, r24
 1f2:	99 1f       	adc	r25, r25
 1f4:	6a 95       	dec	r22
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <DIO_void_Set_pin_val+0xa2>
 1f8:	80 95       	com	r24
 1fa:	82 23       	and	r24, r18
 1fc:	88 bb       	out	0x18, r24	; 24
 1fe:	08 95       	ret
 200:	25 b3       	in	r18, 0x15	; 21
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_void_Set_pin_val+0xbe>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_void_Set_pin_val+0xba>
 210:	80 95       	com	r24
 212:	82 23       	and	r24, r18
 214:	85 bb       	out	0x15, r24	; 21
 216:	08 95       	ret
 218:	22 b3       	in	r18, 0x12	; 18
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_void_Set_pin_val+0xd6>
 220:	88 0f       	add	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	6a 95       	dec	r22
 226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_void_Set_pin_val+0xd2>
 228:	80 95       	com	r24
 22a:	82 23       	and	r24, r18
 22c:	82 bb       	out	0x12, r24	; 18
 22e:	08 95       	ret

00000230 <DIO_u8_Get_pin_val>:
 230:	68 30       	cpi	r22, 0x08	; 8
 232:	60 f5       	brcc	.+88     	; 0x28c <DIO_u8_Get_pin_val+0x5c>
 234:	81 30       	cpi	r24, 0x01	; 1
 236:	79 f0       	breq	.+30     	; 0x256 <DIO_u8_Get_pin_val+0x26>
 238:	28 f0       	brcs	.+10     	; 0x244 <DIO_u8_Get_pin_val+0x14>
 23a:	82 30       	cpi	r24, 0x02	; 2
 23c:	a9 f0       	breq	.+42     	; 0x268 <DIO_u8_Get_pin_val+0x38>
 23e:	83 30       	cpi	r24, 0x03	; 3
 240:	e1 f0       	breq	.+56     	; 0x27a <DIO_u8_Get_pin_val+0x4a>
 242:	26 c0       	rjmp	.+76     	; 0x290 <DIO_u8_Get_pin_val+0x60>
 244:	89 b3       	in	r24, 0x19	; 25
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_u8_Get_pin_val+0x1e>
 24a:	95 95       	asr	r25
 24c:	87 95       	ror	r24
 24e:	6a 95       	dec	r22
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_u8_Get_pin_val+0x1a>
 252:	81 70       	andi	r24, 0x01	; 1
 254:	08 95       	ret
 256:	86 b3       	in	r24, 0x16	; 22
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	02 c0       	rjmp	.+4      	; 0x260 <DIO_u8_Get_pin_val+0x30>
 25c:	95 95       	asr	r25
 25e:	87 95       	ror	r24
 260:	6a 95       	dec	r22
 262:	e2 f7       	brpl	.-8      	; 0x25c <DIO_u8_Get_pin_val+0x2c>
 264:	81 70       	andi	r24, 0x01	; 1
 266:	08 95       	ret
 268:	83 b3       	in	r24, 0x13	; 19
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 c0       	rjmp	.+4      	; 0x272 <DIO_u8_Get_pin_val+0x42>
 26e:	95 95       	asr	r25
 270:	87 95       	ror	r24
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <DIO_u8_Get_pin_val+0x3e>
 276:	81 70       	andi	r24, 0x01	; 1
 278:	08 95       	ret
 27a:	80 b3       	in	r24, 0x10	; 16
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_u8_Get_pin_val+0x54>
 280:	95 95       	asr	r25
 282:	87 95       	ror	r24
 284:	6a 95       	dec	r22
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_u8_Get_pin_val+0x50>
 288:	81 70       	andi	r24, 0x01	; 1
 28a:	08 95       	ret
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	08 95       	ret
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	08 95       	ret

00000294 <set_port_dir>:
 294:	61 30       	cpi	r22, 0x01	; 1
 296:	99 f4       	brne	.+38     	; 0x2be <set_port_dir+0x2a>
 298:	81 30       	cpi	r24, 0x01	; 1
 29a:	49 f0       	breq	.+18     	; 0x2ae <set_port_dir+0x1a>
 29c:	28 f0       	brcs	.+10     	; 0x2a8 <set_port_dir+0x14>
 29e:	82 30       	cpi	r24, 0x02	; 2
 2a0:	49 f0       	breq	.+18     	; 0x2b4 <set_port_dir+0x20>
 2a2:	83 30       	cpi	r24, 0x03	; 3
 2a4:	51 f0       	breq	.+20     	; 0x2ba <set_port_dir+0x26>
 2a6:	0b c0       	rjmp	.+22     	; 0x2be <set_port_dir+0x2a>
 2a8:	9f ef       	ldi	r25, 0xFF	; 255
 2aa:	9a bb       	out	0x1a, r25	; 26
 2ac:	08 c0       	rjmp	.+16     	; 0x2be <set_port_dir+0x2a>
 2ae:	9f ef       	ldi	r25, 0xFF	; 255
 2b0:	97 bb       	out	0x17, r25	; 23
 2b2:	05 c0       	rjmp	.+10     	; 0x2be <set_port_dir+0x2a>
 2b4:	9f ef       	ldi	r25, 0xFF	; 255
 2b6:	94 bb       	out	0x14, r25	; 20
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <set_port_dir+0x2a>
 2ba:	9f ef       	ldi	r25, 0xFF	; 255
 2bc:	91 bb       	out	0x11, r25	; 17
 2be:	61 11       	cpse	r22, r1
 2c0:	0f c0       	rjmp	.+30     	; 0x2e0 <set_port_dir+0x4c>
 2c2:	81 30       	cpi	r24, 0x01	; 1
 2c4:	41 f0       	breq	.+16     	; 0x2d6 <set_port_dir+0x42>
 2c6:	28 f0       	brcs	.+10     	; 0x2d2 <set_port_dir+0x3e>
 2c8:	82 30       	cpi	r24, 0x02	; 2
 2ca:	39 f0       	breq	.+14     	; 0x2da <set_port_dir+0x46>
 2cc:	83 30       	cpi	r24, 0x03	; 3
 2ce:	39 f0       	breq	.+14     	; 0x2de <set_port_dir+0x4a>
 2d0:	08 95       	ret
 2d2:	1a ba       	out	0x1a, r1	; 26
 2d4:	08 95       	ret
 2d6:	17 ba       	out	0x17, r1	; 23
 2d8:	08 95       	ret
 2da:	14 ba       	out	0x14, r1	; 20
 2dc:	08 95       	ret
 2de:	11 ba       	out	0x11, r1	; 17
 2e0:	08 95       	ret

000002e2 <SH_Data>:
	while(string[itr] != '\0')
	{
		LCD_send_data(string[itr]);
		itr++;
	}
}
 2e2:	0f 93       	push	r16
 2e4:	1f 93       	push	r17
 2e6:	cf 93       	push	r28
 2e8:	df 93       	push	r29
 2ea:	00 d0       	rcall	.+0      	; 0x2ec <SH_Data+0xa>
 2ec:	00 d0       	rcall	.+0      	; 0x2ee <SH_Data+0xc>
 2ee:	cd b7       	in	r28, 0x3d	; 61
 2f0:	de b7       	in	r29, 0x3e	; 62
 2f2:	08 2f       	mov	r16, r24
 2f4:	84 e0       	ldi	r24, 0x04	; 4
 2f6:	89 83       	std	Y+1, r24	; 0x01
 2f8:	85 e0       	ldi	r24, 0x05	; 5
 2fa:	8a 83       	std	Y+2, r24	; 0x02
 2fc:	86 e0       	ldi	r24, 0x06	; 6
 2fe:	8b 83       	std	Y+3, r24	; 0x03
 300:	87 e0       	ldi	r24, 0x07	; 7
 302:	8c 83       	std	Y+4, r24	; 0x04
 304:	10 e0       	ldi	r17, 0x00	; 0
 306:	14 c0       	rjmp	.+40     	; 0x330 <SH_Data+0x4e>
 308:	40 2f       	mov	r20, r16
 30a:	50 e0       	ldi	r21, 0x00	; 0
 30c:	01 2e       	mov	r0, r17
 30e:	02 c0       	rjmp	.+4      	; 0x314 <SH_Data+0x32>
 310:	55 95       	asr	r21
 312:	47 95       	ror	r20
 314:	0a 94       	dec	r0
 316:	e2 f7       	brpl	.-8      	; 0x310 <SH_Data+0x2e>
 318:	41 70       	andi	r20, 0x01	; 1
 31a:	e1 e0       	ldi	r30, 0x01	; 1
 31c:	f0 e0       	ldi	r31, 0x00	; 0
 31e:	ec 0f       	add	r30, r28
 320:	fd 1f       	adc	r31, r29
 322:	e1 0f       	add	r30, r17
 324:	f1 1d       	adc	r31, r1
 326:	60 81       	ld	r22, Z
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_void_Set_pin_val>
 32e:	1f 5f       	subi	r17, 0xFF	; 255
 330:	14 30       	cpi	r17, 0x04	; 4
 332:	50 f3       	brcs	.-44     	; 0x308 <SH_Data+0x26>
 334:	0f 90       	pop	r0
 336:	0f 90       	pop	r0
 338:	0f 90       	pop	r0
 33a:	0f 90       	pop	r0
 33c:	df 91       	pop	r29
 33e:	cf 91       	pop	r28
 340:	1f 91       	pop	r17
 342:	0f 91       	pop	r16
 344:	08 95       	ret

00000346 <LCD_Send_Enable_Pulse>:
 346:	41 e0       	ldi	r20, 0x01	; 1
 348:	63 e0       	ldi	r22, 0x03	; 3
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_void_Set_pin_val>
 350:	8f e3       	ldi	r24, 0x3F	; 63
 352:	9f e1       	ldi	r25, 0x1F	; 31
 354:	01 97       	sbiw	r24, 0x01	; 1
 356:	f1 f7       	brne	.-4      	; 0x354 <LCD_Send_Enable_Pulse+0xe>
 358:	00 c0       	rjmp	.+0      	; 0x35a <LCD_Send_Enable_Pulse+0x14>
 35a:	00 00       	nop
 35c:	40 e0       	ldi	r20, 0x00	; 0
 35e:	63 e0       	ldi	r22, 0x03	; 3
 360:	81 e0       	ldi	r24, 0x01	; 1
 362:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_void_Set_pin_val>
 366:	08 95       	ret

00000368 <LCD_send_command>:
 368:	cf 93       	push	r28
 36a:	c8 2f       	mov	r28, r24
 36c:	40 e0       	ldi	r20, 0x00	; 0
 36e:	61 e0       	ldi	r22, 0x01	; 1
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_void_Set_pin_val>
 376:	40 e0       	ldi	r20, 0x00	; 0
 378:	62 e0       	ldi	r22, 0x02	; 2
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_void_Set_pin_val>
 380:	8c 2f       	mov	r24, r28
 382:	82 95       	swap	r24
 384:	8f 70       	andi	r24, 0x0F	; 15
 386:	0e 94 71 01 	call	0x2e2	; 0x2e2 <SH_Data>
 38a:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Send_Enable_Pulse>
 38e:	8c 2f       	mov	r24, r28
 390:	0e 94 71 01 	call	0x2e2	; 0x2e2 <SH_Data>
 394:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Send_Enable_Pulse>
 398:	cf 91       	pop	r28
 39a:	08 95       	ret

0000039c <LCD_init>:
 39c:	2f ef       	ldi	r18, 0xFF	; 255
 39e:	83 ef       	ldi	r24, 0xF3	; 243
 3a0:	91 e0       	ldi	r25, 0x01	; 1
 3a2:	21 50       	subi	r18, 0x01	; 1
 3a4:	80 40       	sbci	r24, 0x00	; 0
 3a6:	90 40       	sbci	r25, 0x00	; 0
 3a8:	e1 f7       	brne	.-8      	; 0x3a2 <LCD_init+0x6>
 3aa:	00 c0       	rjmp	.+0      	; 0x3ac <LCD_init+0x10>
 3ac:	00 00       	nop
 3ae:	82 e0       	ldi	r24, 0x02	; 2
 3b0:	0e 94 71 01 	call	0x2e2	; 0x2e2 <SH_Data>
 3b4:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Send_Enable_Pulse>
 3b8:	82 e0       	ldi	r24, 0x02	; 2
 3ba:	0e 94 71 01 	call	0x2e2	; 0x2e2 <SH_Data>
 3be:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Send_Enable_Pulse>
 3c2:	8c e0       	ldi	r24, 0x0C	; 12
 3c4:	0e 94 71 01 	call	0x2e2	; 0x2e2 <SH_Data>
 3c8:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Send_Enable_Pulse>
 3cc:	8c e0       	ldi	r24, 0x0C	; 12
 3ce:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_send_command>
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_send_command>
 3d8:	08 95       	ret

000003da <LCD_send_data>:
 3da:	cf 93       	push	r28
 3dc:	c8 2f       	mov	r28, r24
 3de:	41 e0       	ldi	r20, 0x01	; 1
 3e0:	61 e0       	ldi	r22, 0x01	; 1
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_void_Set_pin_val>
 3e8:	40 e0       	ldi	r20, 0x00	; 0
 3ea:	62 e0       	ldi	r22, 0x02	; 2
 3ec:	81 e0       	ldi	r24, 0x01	; 1
 3ee:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_void_Set_pin_val>
 3f2:	8c 2f       	mov	r24, r28
 3f4:	82 95       	swap	r24
 3f6:	8f 70       	andi	r24, 0x0F	; 15
 3f8:	0e 94 71 01 	call	0x2e2	; 0x2e2 <SH_Data>
 3fc:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Send_Enable_Pulse>
 400:	8c 2f       	mov	r24, r28
 402:	0e 94 71 01 	call	0x2e2	; 0x2e2 <SH_Data>
 406:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Send_Enable_Pulse>
 40a:	cf 91       	pop	r28
 40c:	08 95       	ret

0000040e <LCD_send_number>:

void LCD_send_number(s16 number)
{
 40e:	6f 92       	push	r6
 410:	7f 92       	push	r7
 412:	8f 92       	push	r8
 414:	9f 92       	push	r9
 416:	af 92       	push	r10
 418:	bf 92       	push	r11
 41a:	cf 92       	push	r12
 41c:	df 92       	push	r13
 41e:	ef 92       	push	r14
 420:	ff 92       	push	r15
 422:	0f 93       	push	r16
 424:	1f 93       	push	r17
 426:	cf 93       	push	r28
 428:	df 93       	push	r29
 42a:	cd b7       	in	r28, 0x3d	; 61
 42c:	de b7       	in	r29, 0x3e	; 62
 42e:	4c 01       	movw	r8, r24
		str[length] = '/0';
		for (itr = 0;itr < length;itr++)
		{
			LCD_send_data(str[itr]);
		}
}
 430:	cd b6       	in	r12, 0x3d	; 61
 432:	de b6       	in	r13, 0x3e	; 62
}

void LCD_send_number(s16 number)
{
		u8 itr = 0,remainder = 0,length = 0;
		if (number == 0)
 434:	00 97       	sbiw	r24, 0x00	; 0
 436:	21 f4       	brne	.+8      	; 0x440 <LCD_send_number+0x32>
		{
			LCD_send_data('0');
 438:	80 e3       	ldi	r24, 0x30	; 48
 43a:	0e 94 ed 01 	call	0x3da	; 0x3da <LCD_send_data>
			return;
 43e:	4d c0       	rjmp	.+154    	; 0x4da <LCD_send_number+0xcc>
		}
		else if (number < 0)
 440:	99 23       	and	r25, r25
 442:	34 f4       	brge	.+12     	; 0x450 <LCD_send_number+0x42>
		{
			number *=-1;
 444:	91 94       	neg	r9
 446:	81 94       	neg	r8
 448:	91 08       	sbc	r9, r1
			LCD_send_data('-');
 44a:	8d e2       	ldi	r24, 0x2D	; 45
 44c:	0e 94 ed 01 	call	0x3da	; 0x3da <LCD_send_data>
		}
		u16 temp = number;
 450:	c4 01       	movw	r24, r8
	}
}

void LCD_send_number(s16 number)
{
		u8 itr = 0,remainder = 0,length = 0;
 452:	10 e0       	ldi	r17, 0x00	; 0
		{
			number *=-1;
			LCD_send_data('-');
		}
		u16 temp = number;
		while (temp != 0)
 454:	06 c0       	rjmp	.+12     	; 0x462 <LCD_send_number+0x54>
		{
			temp /= 10;
 456:	6a e0       	ldi	r22, 0x0A	; 10
 458:	70 e0       	ldi	r23, 0x00	; 0
 45a:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__divmodhi4>
 45e:	cb 01       	movw	r24, r22
			length++;
 460:	1f 5f       	subi	r17, 0xFF	; 255
		{
			number *=-1;
			LCD_send_data('-');
		}
		u16 temp = number;
		while (temp != 0)
 462:	00 97       	sbiw	r24, 0x00	; 0
 464:	c1 f7       	brne	.-16     	; 0x456 <LCD_send_number+0x48>
		{
			temp /= 10;
			length++;
		}
		u8 str[length];
 466:	ad b6       	in	r10, 0x3d	; 61
 468:	be b6       	in	r11, 0x3e	; 62
 46a:	e1 2f       	mov	r30, r17
 46c:	f0 e0       	ldi	r31, 0x00	; 0
 46e:	8d b7       	in	r24, 0x3d	; 61
 470:	9e b7       	in	r25, 0x3e	; 62
 472:	8e 1b       	sub	r24, r30
 474:	9f 0b       	sbc	r25, r31
 476:	0f b6       	in	r0, 0x3f	; 63
 478:	f8 94       	cli
 47a:	9e bf       	out	0x3e, r25	; 62
 47c:	0f be       	out	0x3f, r0	; 63
 47e:	8d bf       	out	0x3d, r24	; 61
 480:	01 96       	adiw	r24, 0x01	; 1
 482:	3c 01       	movw	r6, r24
 484:	7c 01       	movw	r14, r24
		for(itr = 0;itr < length;itr++)
 486:	20 e0       	ldi	r18, 0x00	; 0
 488:	12 c0       	rjmp	.+36     	; 0x4ae <LCD_send_number+0xa0>
		{
			remainder = number % 10;
			number /= 10;
 48a:	c4 01       	movw	r24, r8
 48c:	6a e0       	ldi	r22, 0x0A	; 10
 48e:	70 e0       	ldi	r23, 0x00	; 0
 490:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__divmodhi4>
 494:	4b 01       	movw	r8, r22
			str[length - (itr + 1)] = remainder +'0';
 496:	42 2f       	mov	r20, r18
 498:	50 e0       	ldi	r21, 0x00	; 0
 49a:	4f 5f       	subi	r20, 0xFF	; 255
 49c:	5f 4f       	sbci	r21, 0xFF	; 255
 49e:	df 01       	movw	r26, r30
 4a0:	a4 1b       	sub	r26, r20
 4a2:	b5 0b       	sbc	r27, r21
 4a4:	ae 0d       	add	r26, r14
 4a6:	bf 1d       	adc	r27, r15
 4a8:	80 5d       	subi	r24, 0xD0	; 208
 4aa:	8c 93       	st	X, r24
		{
			temp /= 10;
			length++;
		}
		u8 str[length];
		for(itr = 0;itr < length;itr++)
 4ac:	2f 5f       	subi	r18, 0xFF	; 255
 4ae:	21 17       	cp	r18, r17
 4b0:	60 f3       	brcs	.-40     	; 0x48a <LCD_send_number+0x7c>
		{
			remainder = number % 10;
			number /= 10;
			str[length - (itr + 1)] = remainder +'0';
		}
		str[length] = '/0';
 4b2:	e6 0d       	add	r30, r6
 4b4:	f7 1d       	adc	r31, r7
 4b6:	80 e3       	ldi	r24, 0x30	; 48
 4b8:	80 83       	st	Z, r24
		for (itr = 0;itr < length;itr++)
 4ba:	00 e0       	ldi	r16, 0x00	; 0
 4bc:	07 c0       	rjmp	.+14     	; 0x4cc <LCD_send_number+0xbe>
		{
			LCD_send_data(str[itr]);
 4be:	f7 01       	movw	r30, r14
 4c0:	e0 0f       	add	r30, r16
 4c2:	f1 1d       	adc	r31, r1
 4c4:	80 81       	ld	r24, Z
 4c6:	0e 94 ed 01 	call	0x3da	; 0x3da <LCD_send_data>
			remainder = number % 10;
			number /= 10;
			str[length - (itr + 1)] = remainder +'0';
		}
		str[length] = '/0';
		for (itr = 0;itr < length;itr++)
 4ca:	0f 5f       	subi	r16, 0xFF	; 255
 4cc:	01 17       	cp	r16, r17
 4ce:	b8 f3       	brcs	.-18     	; 0x4be <LCD_send_number+0xb0>
 4d0:	0f b6       	in	r0, 0x3f	; 63
 4d2:	f8 94       	cli
 4d4:	be be       	out	0x3e, r11	; 62
 4d6:	0f be       	out	0x3f, r0	; 63
 4d8:	ad be       	out	0x3d, r10	; 61
		{
			LCD_send_data(str[itr]);
		}
}
 4da:	0f b6       	in	r0, 0x3f	; 63
 4dc:	f8 94       	cli
 4de:	de be       	out	0x3e, r13	; 62
 4e0:	0f be       	out	0x3f, r0	; 63
 4e2:	cd be       	out	0x3d, r12	; 61
 4e4:	df 91       	pop	r29
 4e6:	cf 91       	pop	r28
 4e8:	1f 91       	pop	r17
 4ea:	0f 91       	pop	r16
 4ec:	ff 90       	pop	r15
 4ee:	ef 90       	pop	r14
 4f0:	df 90       	pop	r13
 4f2:	cf 90       	pop	r12
 4f4:	bf 90       	pop	r11
 4f6:	af 90       	pop	r10
 4f8:	9f 90       	pop	r9
 4fa:	8f 90       	pop	r8
 4fc:	7f 90       	pop	r7
 4fe:	6f 90       	pop	r6
 500:	08 95       	ret

00000502 <main>:
 #define F_CPU 16000000UL
 #include <util/delay.h>
 
int main(void)
{
	set_port_dir(LCD_DATA_PORT,OUTPUT);
 502:	61 e0       	ldi	r22, 0x01	; 1
 504:	80 e0       	ldi	r24, 0x00	; 0
 506:	0e 94 4a 01 	call	0x294	; 0x294 <set_port_dir>
	DIO_void_Set_pin_dir(LCD_RS_PORT,LCD_RS_PIN,OUTPUT);
 50a:	41 e0       	ldi	r20, 0x01	; 1
 50c:	61 e0       	ldi	r22, 0x01	; 1
 50e:	81 e0       	ldi	r24, 0x01	; 1
 510:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_void_Set_pin_dir>
	DIO_void_Set_pin_dir(LCD_RW_PORT,LCD_RW_PIN,OUTPUT);
 514:	41 e0       	ldi	r20, 0x01	; 1
 516:	62 e0       	ldi	r22, 0x02	; 2
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_void_Set_pin_dir>
	DIO_void_Set_pin_dir(LCD_E_PORT,LCD_E_PIN,OUTPUT);
 51e:	41 e0       	ldi	r20, 0x01	; 1
 520:	63 e0       	ldi	r22, 0x03	; 3
 522:	81 e0       	ldi	r24, 0x01	; 1
 524:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_void_Set_pin_dir>
	DIO_void_Set_pin_dir(PORTD,PIN6,INPUT);
 528:	40 e0       	ldi	r20, 0x00	; 0
 52a:	66 e0       	ldi	r22, 0x06	; 6
 52c:	83 e0       	ldi	r24, 0x03	; 3
 52e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_void_Set_pin_dir>
	LCD_init();
 532:	0e 94 ce 01 	call	0x39c	; 0x39c <LCD_init>
 #include "SWITCH_Interface.h"
 #define F_CPU 16000000UL
 #include <util/delay.h>
 
int main(void)
{
 536:	c1 2c       	mov	r12, r1
 538:	d1 2c       	mov	r13, r1
 53a:	76 01       	movw	r14, r12
	s32 count = 0;
	u8 flag = 0;
    while (1) 
    {
		
			LCD_send_command(0x80);
 53c:	80 e8       	ldi	r24, 0x80	; 128
 53e:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_send_command>
			LCD_send_number(count);
 542:	c6 01       	movw	r24, r12
 544:	0e 94 07 02 	call	0x40e	; 0x40e <LCD_send_number>
			if (IS_PRESSED(PORTD,PIN2))
 548:	62 e0       	ldi	r22, 0x02	; 2
 54a:	83 e0       	ldi	r24, 0x03	; 3
 54c:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <IS_PRESSED>
 550:	88 23       	and	r24, r24
 552:	71 f0       	breq	.+28     	; 0x570 <main+0x6e>
			{
				while(IS_PRESSED(PORTD,PIN2));
 554:	62 e0       	ldi	r22, 0x02	; 2
 556:	83 e0       	ldi	r24, 0x03	; 3
 558:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <IS_PRESSED>
 55c:	81 11       	cpse	r24, r1
 55e:	fa cf       	rjmp	.-12     	; 0x554 <main+0x52>
				LCD_send_command(0x01);
 560:	81 e0       	ldi	r24, 0x01	; 1
 562:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_send_command>
				count++;
 566:	8f ef       	ldi	r24, 0xFF	; 255
 568:	c8 1a       	sub	r12, r24
 56a:	d8 0a       	sbc	r13, r24
 56c:	e8 0a       	sbc	r14, r24
 56e:	f8 0a       	sbc	r15, r24
			}
			if (IS_PRESSED(PORTD,PIN6))
 570:	66 e0       	ldi	r22, 0x06	; 6
 572:	83 e0       	ldi	r24, 0x03	; 3
 574:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <IS_PRESSED>
 578:	88 23       	and	r24, r24
 57a:	71 f0       	breq	.+28     	; 0x598 <main+0x96>
			{
				while(IS_PRESSED(PORTD,PIN6));
 57c:	66 e0       	ldi	r22, 0x06	; 6
 57e:	83 e0       	ldi	r24, 0x03	; 3
 580:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <IS_PRESSED>
 584:	81 11       	cpse	r24, r1
 586:	fa cf       	rjmp	.-12     	; 0x57c <main+0x7a>
				LCD_send_command(0x01);
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_send_command>
				count--;
 58e:	81 e0       	ldi	r24, 0x01	; 1
 590:	c8 1a       	sub	r12, r24
 592:	d1 08       	sbc	r13, r1
 594:	e1 08       	sbc	r14, r1
 596:	f1 08       	sbc	r15, r1
			}
			if (IS_PRESSED(PORTB,PIN0))
 598:	60 e0       	ldi	r22, 0x00	; 0
 59a:	81 e0       	ldi	r24, 0x01	; 1
 59c:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <IS_PRESSED>
 5a0:	88 23       	and	r24, r24
 5a2:	61 f2       	breq	.-104    	; 0x53c <main+0x3a>
			{
				while(IS_PRESSED(PORTB,PIN0));
 5a4:	60 e0       	ldi	r22, 0x00	; 0
 5a6:	81 e0       	ldi	r24, 0x01	; 1
 5a8:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <IS_PRESSED>
 5ac:	81 11       	cpse	r24, r1
 5ae:	fa cf       	rjmp	.-12     	; 0x5a4 <main+0xa2>
				LCD_send_command(0x01);
 5b0:	81 e0       	ldi	r24, 0x01	; 1
 5b2:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_send_command>
 5b6:	bf cf       	rjmp	.-130    	; 0x536 <main+0x34>

000005b8 <IS_PRESSED>:
 5b8:	0e 94 18 01 	call	0x230	; 0x230 <DIO_u8_Get_pin_val>
 5bc:	81 30       	cpi	r24, 0x01	; 1
 5be:	09 f0       	breq	.+2      	; 0x5c2 <IS_PRESSED+0xa>
 5c0:	80 e0       	ldi	r24, 0x00	; 0
 5c2:	08 95       	ret

000005c4 <__divmodhi4>:
 5c4:	97 fb       	bst	r25, 7
 5c6:	07 2e       	mov	r0, r23
 5c8:	16 f4       	brtc	.+4      	; 0x5ce <__divmodhi4+0xa>
 5ca:	00 94       	com	r0
 5cc:	07 d0       	rcall	.+14     	; 0x5dc <__divmodhi4_neg1>
 5ce:	77 fd       	sbrc	r23, 7
 5d0:	09 d0       	rcall	.+18     	; 0x5e4 <__divmodhi4_neg2>
 5d2:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__udivmodhi4>
 5d6:	07 fc       	sbrc	r0, 7
 5d8:	05 d0       	rcall	.+10     	; 0x5e4 <__divmodhi4_neg2>
 5da:	3e f4       	brtc	.+14     	; 0x5ea <__divmodhi4_exit>

000005dc <__divmodhi4_neg1>:
 5dc:	90 95       	com	r25
 5de:	81 95       	neg	r24
 5e0:	9f 4f       	sbci	r25, 0xFF	; 255
 5e2:	08 95       	ret

000005e4 <__divmodhi4_neg2>:
 5e4:	70 95       	com	r23
 5e6:	61 95       	neg	r22
 5e8:	7f 4f       	sbci	r23, 0xFF	; 255

000005ea <__divmodhi4_exit>:
 5ea:	08 95       	ret

000005ec <__udivmodhi4>:
 5ec:	aa 1b       	sub	r26, r26
 5ee:	bb 1b       	sub	r27, r27
 5f0:	51 e1       	ldi	r21, 0x11	; 17
 5f2:	07 c0       	rjmp	.+14     	; 0x602 <__udivmodhi4_ep>

000005f4 <__udivmodhi4_loop>:
 5f4:	aa 1f       	adc	r26, r26
 5f6:	bb 1f       	adc	r27, r27
 5f8:	a6 17       	cp	r26, r22
 5fa:	b7 07       	cpc	r27, r23
 5fc:	10 f0       	brcs	.+4      	; 0x602 <__udivmodhi4_ep>
 5fe:	a6 1b       	sub	r26, r22
 600:	b7 0b       	sbc	r27, r23

00000602 <__udivmodhi4_ep>:
 602:	88 1f       	adc	r24, r24
 604:	99 1f       	adc	r25, r25
 606:	5a 95       	dec	r21
 608:	a9 f7       	brne	.-22     	; 0x5f4 <__udivmodhi4_loop>
 60a:	80 95       	com	r24
 60c:	90 95       	com	r25
 60e:	bc 01       	movw	r22, r24
 610:	cd 01       	movw	r24, r26
 612:	08 95       	ret

00000614 <_exit>:
 614:	f8 94       	cli

00000616 <__stop_program>:
 616:	ff cf       	rjmp	.-2      	; 0x616 <__stop_program>
